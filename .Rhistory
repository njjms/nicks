#   - 9500780 has a confirmed partial deletion 409kb (< 500kB)
#   - 8249902 mother may have had deletion (potential exclusion)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.90)
specificity_total_calls
# Overall calls - 12544 calls for specificity, 11 calls for sensitivity
# 216 NCs for specificity, 1 NO_RESULT for sensitivity
table(blinded_data_arm1$clinical_truth,
blinded_data_arm1$pano_final_call)
#
# Specificity calculation
# Edge cases:
#   - 9500780 has a confirmed partial deletion 409kb (< 500kB)
#   - 8249902 mother may have had deletion (potential exclusion)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.90)
clopper_pearson(x=12530, n=specificity_total_calls-2, conf.level=.90)
clopper_pearson(x=12525, n=specificity_total_calls-2, conf.level=.90)
clopper_pearson(x=12520, n=specificity_total_calls-2, conf.level=.90)
clopper_pearson(x=12522, n=specificity_total_calls-2, conf.level=.90)
clopper_pearson(x=12521, n=specificity_total_calls-2, conf.level=.90)
# Overall calls - 12544 calls for specificity, 11 calls for sensitivity
# 216 NCs for specificity, 1 NO_RESULT for sensitivity
table(blinded_data_arm1$clinical_truth,
blinded_data_arm1$pano_final_call)
specificity_total_calls <- 12531 + 13
sensitivity_total_calls <- 11
#
# Specificity calculation
# Edge cases:
#   - 9500780 has a confirmed partial deletion 409kb (< 500kB)
#   - 8249902 mother may have had deletion (potential exclusion)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.90)
blinded_data_arm3 <- read_csv("hr_dnn_results_arm3.csv")
View(blinded_data_arm3)
#
# Arm 3 Analysis
#
blinded_data_arm3
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)/(sum(table(blinded_data_arm3$final_call))-1)
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)/(1+38+7+2)
(38+7)/(38+7+3)
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
(38+7)/(38+7+3)
(38+7+10)/(38+7+3+11) # Overall sensitivity point estimate 93.75%
#
# Specificity calculation
# Edge cases:
#   - 9500780 has a confirmed partial deletion 409kb (< 500kB)
#   - 8249902 mother may have had deletion (potential exclusion)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.90)
sensitivity_estimate <- (38+7+10)/(38+7+3+11) # Overall sensitivity point estimate 93.22%
specificity_estimate <- 12531/(specificity_total_calls-2)
specificity_estimate
prevalence <- .0005
ppv_estimate <- (sensitivity_estimate*prevalence)/(sensitivity_estimate*prevalence + (1 - specificity_estimate)*(1-prevalence))
ppv_estimate
specificity_estimate
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
clopper_pearson(x=45, n=48, conf.level=.9)
45/48
55/59
prevalence*2000
ppv_estimate <- (sensitivity_estimate*prevalence)/(sensitivity_estimate*prevalence + (1 - specificity_estimate)*(1-prevalence))
ppv_estimate
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
clopper_pearson(x=45, n=48, conf.level=.9)
ppv_estimate <- (sensitivity_estimate*prevalence)/((sensitivity_estimate*prevalence) + (1 - specificity_estimate)*(1-prevalence))
ppv_estimate
data.frame(x = rnorm(50),
y = rep(1, 50))
data <- data.frame(x = rnorm(50),
y = rep(1, 50))
example_glmod <- glm(y ~ x, data = data,
family = "binomial")
example_glmod
dat1 <- data.frame(x = rnorm(50),
y = rep(1, 50))
example_glmod <- glm(y ~ x, data = dat1,
family = "binomial")
example_glmod
summary(example_glmod)
table(blinded_data_arm3$pano_digeorge_call,
blinded_data_arm3$final_call)
clopper_pearson(x=10, n=sensitivity_total_calls, conf.level=.95)
216/12760
specificity_total_calls-2
#
# Specificity calculation
# Edge cases:
#   - 9500780 has a confirmed partial deletion 409kb (< 500kB)
#   - 8249902 mother may have had deletion (potential exclusion)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.90)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.95)
12531/12542
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
#
# Arm 2 Analysis
# Edge cases:
#   - 9712596 was previously run on Pano V2 and was not salvageable
View(blinded_data_arm2)
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
#
# Arm 3 Analysis
#
sum(table(blinded_data_arm3$final_call))
12531/12542
12530/12542
12529/12542
clopper_pearson(x=508, n=508, conf.level=.95)
clopper_pearson(x=18022, n=18032, conf.level=.95)
wilson_score(x=18022, n=18032, conf.level=.95)
library(PropCIs)
exactci(x = 18022, n = 18032, conf.level=.95)
exactci(x=508, n=508, conf.level=.95)
17974/18003
exactci(x=17974, n = 18003, conf.level=.95)
prq_delta = .95
is.na(prq_delta)
interval_surpasses = TRUE
intercal_surpasses & is.na(prq_delta)
interval_surpasses & is.na(prq_delta)
interval_surpasses & !is.na(prq_delta)
if(interval_surpasses & !is.na(prq_delta)) print("hi")
prq_delta = NA
is.na(prq_delta)
shiny::runApp('~/Documents/power_calculator/power_calculator')
install.packages("shinydashboard")
shiny::runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
x <- "100, 200, 300"
strsplit(x, ",")
unlist(strsplit(x, ","))
strip(unlist(strsplit(x, ",")))
trimws(unlist(strsplit(x, ",")))
x = NULL
trimws(unlist(strsplit(x, ",")))
x
requirement = .99
requirement - seq(0, .1, by = .01)
requirement + seq(0, .1, by = .01)
y = requirement + seq(0, .1, by = .01)
y[(y >= 0) & (y <= 1)]
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp()
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp()
runApp('~/Documents/power_calculator/power_calculator')
trimws(
unlist(
strsplit(
"100",
","
)
)
)
x = c("100", "200", "300")
x
as.numeric(x)
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp()
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
View(curve_plot_data)
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
df <- function(year, return=.08, inflation=.03) 1/(1 + return + inflation)^year
df(year=1)
df(year=2)
df(year=3)
df(year=4)
4^9
(.9332*.0005)/((.9332*.0005) + (1-.9912)*(1-.0005))
(.9332*.0005)/((.9332*.0005) + ((1-.9912)*(1-.0005)))
.9332*.0005
1-.9912
.0088*(1-.0005)
.0005*2000
(.9332*.0005) + (1-.9912)*(1-.0005)
(.9332*.0005)/.0092622
(.9332*.0005) + (1-.99912)*(1-.0005)
(.9332*.0005)/.00134616
(93.22*.05)/((93.22*.05) + (100-99.912)*(100-.05))
(.9322*.0005)/((.9322*.0005) + (1-.99912)*(1-.0005))
100*((.9322*.0005)/((.9322*.0005) + (1-.99912)*(1-.0005)))
9/11
blinded_data_arm3_hr_dnn_off <- read_csv("HR_DNN_22q_Validation_Results_Blinded_Arm3_redux.csv")
setwd("~/Documents/panorama/high_risk_dnn/hr_dnn_validation_analysis")
blinded_data_arm3_hr_dnn_off <- read_csv("HR_DNN_22q_Validation_Results_Blinded_Arm3_redux.csv")
table(blinded_data_arm3$final_call)
table(blinded_data_arm3_redux$final_call)
table(blinded_data_arm3_hr_dnn_off$final_call)
#
# Arm 3 Analysis with HR DNN off
# - Phase 0 Algorithms called 4/4 full deletions, 3/3 deletions of unknown size, 2/4 partial deletions (9/11)
nrow(blinded_data_arm3_hr_dnn_off)
sensitvity_estimate_hr_dnn_off <- (28 + 12 + 9)/(28 + 12 + 4 + 2 + 11)
sensitivity_estimate_hr_dnn_off
sensitivity_estimate_hr_dnn_off <- (28 + 12 + 9)/(28 + 12 + 4 + 2 + 11)
sensitivity_estimate_hr_dnn_off
sensitivity_estimate <- (38+7+10)/(38+7+3+11) # Overall sensitivity point estimate 93.22%
specificity_estimate <- 12531/(specificity_total_calls-2)
blinded_data_arm3 <- read_csv("hr_dnn_results_arm3.csv")
#
# Arm 3 Analysis
#
table(blinded_data_arm3$final_call)
clopper_pearson(x=45, n=48, conf.level=.9)
clopper_pearson(x=40, n=46, conf.level=.9)
40/46
sensitivity_estimate_hr_dnn_off
source('~/Documents/panorama/high_risk_dnn/hr_dnn_validation_analysis/hr_dnn_validation_analysis.R', echo=TRUE)
9/11
#
# Arm 3 Analysis with HR DNN off
# - Phase 0 Algorithms called 4/4 full deletions, 3/3 deletions of unknown size, 2/4 partial deletions (9/11)
table(blinded_data_arm3_hr_dnn_off$final_call)
sensitivity_estimate_hr_dnn_off <- (28 + 12 + 9)/(28 + 12 + 4 + 2 + 11)
sensitivity_estimate_hr_dnn_off
sensitivity_estimate_hr_dnn_off
clopper_pearson(x=40, n=46, conf.level=.9)
40/46
#
# Arm 3 Analysis with HR DNN off
# - Phase 0 Algorithms called 4/4 full deletions, 3/3 deletions of unknown size, 2/4 partial deletions (9/11)
table(blinded_data_arm3_hr_dnn_off$final_call)
colnames(blinded_data_arm3_hr_dnn_off)
table(blinded_data_arm3_hr_dnn_off$pano_digeorge_call)
blinded_data_arm3_hr_dnn_off %>%
filter(pano_digeorge_call == "NO_CALL_RE_PCR")
blinded_data_arm3_hr_dnn_off %>%
filter(pano_digeorge_call == "NO_CALL_REFLEX_RECOMMENDED")
blinded_data_arm3_hr_dnn_off %>%
filter(pano_digeorge_call == "NO_CALL_REFLEX_RECOMMENDED") %>%
pull(blinded_case_id)
49/57
51/59
#
# Arm 3 Analysis with HR DNN off
# - Phase 0 Algorithms called 4/4 full deletions, 3/3 deletions of unknown size, 2/4 partial deletions (9/11)
table(blinded_data_arm3_hr_dnn_off$final_call)
blinded_data_arm3_hr_dnn_off %>%
filter(pano_digeorge_call == "NO_CALL_REFLEX_RECOMMENDED") %>%
pull(blinded_case_id)
blinded_data_arm3_hr_dnn_off %>%
filter(final_call == "N/A") %>%
pull(blinded_case_id)
blinded_data_arm3_hr_dnn_off %>%
filter(final_call == "N/A") %>%
select(pano_digeorge_call)
blinded_data_arm3_hr_dnn_off %>%
filter(final_call == "N/A") %>%
select(pano_digeorge_call, blinded_case_id)
blinded_data_arm3_hr_dnn_off %>%
filter(final_call == "N/A") %>% View()
View(blinded_data_arm3)
clopper_pearson(x = 10, n= 11, conf.level = .95)
clopper_pearson(x = 45, n= 48, conf.level = .95)
clopper_pearson(x = 55, n= 59, conf.level = .95)
clopper_pearson(x = 9, n= 11, conf.level = .95)
clopper_pearson(x = 40, n= 46, conf.level = .95)
clopper_pearson(x = 57, n= 49, conf.level = .95)
clopper_pearson(x = 49, n= 57, conf.level = .95)
#
# Arm 3 Analysis with HR DNN off
# - Phase 0 Algorithms called 4/4 full deletions, 3/3 deletions of unknown size, 2/4 partial deletions (9/11)
table(blinded_data_arm3_hr_dnn_off$final_call)
sensitivity_estimate_hr_dnn_off
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp()
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp()
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/power_calculator')
install_github("njjms/nicks")
library(devtools)
install_github("njjms/nicks")
library(nicks)
clopper_pearson(x = 40, n = 45)
12524/12531
12531/12542
runApp('~/Documents/power_calculator/effect_size_calculator/effect_size_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
library(nicks)
runApp('~/Documents/power_calculator/power_calculator')
clopper_pearson(x = 45, n = 50)
nicks::clopper_pearson(x = 45, n = 50)
devtools::install_github("njjms/nicks")
library(nicks)
clopper_pearson(x = 45, n = 50)
remove.packages("nicks")
nicks::clopper_pearson(x = 40, n =45)
devtools::install_github("njjms/nicks")
library(nicks)
nicks::clopper_pearson(x=45, n=50)
library(nicks)
nicks::clopper_pearson(x = 45, n = 50)
library(devtools)
devtools::install_github("njjms/nicks")
runApp('~/Documents/power_calculator/power_calculator')
power_calc(sample_size = 500, true_prob=.99, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x <- power_calc(sample_size = 500, true_prob=.99, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x
x$df
x$df %>% colnames
x$df %>% filter(pass = 1)
x$df %>% filter(pass == 1)
x$df %>% filter(pass == 1) %>% pull(prob) %>% sum
x <- power_calc(sample_size = 500, true_prob=.94, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x$df %>% filter(pass == 1) %>% pull(prob) %>% sum
x <- power_calc(sample_size = 500, true_prob=.95, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x$df %>% filter(pass == 1) %>% pull(prob) %>% sum
x <- power_calc(sample_size = 550, true_prob=.94, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x$df %>% filter(pass == 1) %>% pull(prob) %>% sum
x$df %>% filter(pass == 0) %>% pull(prob) %>% sum
x$df %>% filter(pass == 0)
x$df %>% filter(pass == 0) %>% pull(prob) %>% sum
x <- power_calc(sample_size = 500, true_prob=.94, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x$df %>% filter(pass == 0) %>% pull(prob) %>% sum
x <- power_calc(sample_size = 500, true_prob=.95, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x$df %>% filter(pass == 0) %>% pull(prob) %>% sum
x$df %>% filter(pass == 1) %>% pull(prob) %>% sum
x$df %>% filter(pass == 0) %>% pull(prob) %>% sum
x <- power_calc(sample_size = 500, true_prob=.94, requirement=.91, interval_surpasses=TRUE, alpha = .1, interval_type="ws")
x$df %>% filter(pass == 0) %>% pull(prob) %>% sum
n <- c(100, 200, 300)
is.numeric(n)
n <- c(100, 200, "hello")
n
is.numeric(n)
runApp('~/Documents/power_calculator/power_calculator')
n
as.numeric(trimws(unlist(strsplit(n,","))))
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
runApp('~/Documents/power_calculator/power_calculator')
10*.2
clopper_pearson(x=23, n=25)
clopper_person(x=389, n=390)
clopper_pearson(x=389, n=390)
wilson_score(x=389, n=390)
wilson_score(x=23, n=25)
library(devtools)
devtools::document()
setwd("~/Documents/nicks")
devtools::document()
runApp('~/Documents/power_calculator/power_calculator')
p_flip <- .01
n <- 1000
threshold <- n*p_flip
threshold
pbinom(threshold, size=n, prob=p_flip)
sum(dbinom(0:threshold, size=n, prob=p_flip))
dbinom(0:threshold, size=n, prob=p_flip)
length(dbinom(0:threshold, size=n, prob=p_flip))
sum(dbinom(0:threshold, size=n, prob=p_flip))
p_flip <- .01
n <- seq(100, 1000, by=10)
threshold <- n*p_flip
threshold
sum(dbinom(0:threshold, size=n, prob=p_flip))
sapply(threshold, FUN = function(t) sum(dbinom(0:t, size=n, prob=p_flip)))
sapply(list(n=n, t=t), FUN = function(n, t) sum(dbinom(0:t, size=n, prob=p_flip)))
sapply(list(n=n, t=threshold), FUN = function(n, t) sum(dbinom(0:t, size=n, prob=p_flip)))
threshold <- n*p_flip
length(n)
length(threshold)
list(n=n, t=threshold)
sapply(list(n=n, t=threshold), FUN = sum(dbinom(0:t, size=n, prob=p_flip)))
list(n=n, t=threshold)
sapply(list(n=n, t=threshold), FUN = function(n, t) sum(dbinom(0:t, size=n, prob=p_flip)))
mapply(list(n=n, t=threshold), FUN = function(n, t) sum(dbinom(0:t, size=n, prob=p_flip)))
library(purrr)
map2(n, threshold, ~ sum(dbinom(0:.threshold, size=.n, prob=p_flip)))
12531-12542
11/12542
100*(11/12542)
dbinom(10:11, size=11, prob=.8, lower.tail = FALSE)
dbinom(10:11, size=11, prob=.8)
sum(dbinom(10:11, size=11, prob=.8))
sum(dbinom(10, size=11, prob=.8))
sum(dbinom(55:59, size=59, prob=.8))
sum(dbinom(9:11, size=11, prob=.8))
sum(dbinom(49:57, size=57, prob=.8))
sum(dbinom(10:12, size=12, prob=.8))
dbinom(55:59, size=59, prob=.8)
setwd("~/Documents/panorama/high_risk_dnn/hr_dnn_validation_analysis")
blinded_data_arm1 <- read_csv("hr_dnn_results_arm1.csv")
blinded_data_arm2 <- read_csv("hr_dnn_results_arm2.csv")
blinded_data_arm3 <- read_csv("hr_dnn_results_arm3.csv")
blinded_data_arm3_hr_dnn_off <- read_csv("HR_DNN_22q_Validation_Results_Blinded_Arm3_redux.csv")
# Column names
colnames(blinded_data_arm1)
colnames(blinded_data_arm2)
# Overall counts - 12760 confirmed negative samples, 12 positive samples
table(blinded_data_arm1$clinical_truth)
# Overall calls - 12544 calls for specificity, 11 calls for sensitivity
# 216 NCs for specificity, 1 NO_RESULT for sensitivity
table(blinded_data_arm1$clinical_truth,
blinded_data_arm1$pano_final_call)
specificity_total_calls <- 12531 + 13
sensitivity_total_calls <- 11
#
# Reporting No-Calls
#
blinded_data_arm1 %>%
filter(blinded_case_id %in% c(9500780, 8249902)) %>%
select(clinical_truth, pano_final_call)
blinded_data_arm1 %>%
filter(pano_final_call %in% c("NO_CALL_QC_FAILURE")) %>%
select(QC_exclusion) %>%
table() %>% sort()
blinded_data_arm1 %>%
filter(pano_final_call %in% c("NO_CALL_RE_PCR")) %>%
pull(blinded_case_id) %>%
paste(., collapse=",")
blinded_data_arm1 %>%
filter(QC_exclusion %in% c("LAB_ERROR")) %>%
pull(blinded_case_id) %>% paste(., collapse = ",")
#
# Specificity calculation
# Edge cases:
#   - 9500780 has a confirmed partial deletion 409kb (< 500kB)
#   - 8249902 mother may have had deletion (potential exclusion)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.90)
#
# Specificity calculation
# Edge cases:
#   - 9500780 has a confirmed partial deletion 409kb (< 500kB)
#   - 8249902 mother may have had deletion (potential exclusion)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.90)
clopper_pearson(x=12531, n=specificity_total_calls-2, conf.level=.95)
12531/12542
#
# Sensitivity calculation
# Edge cases:
#   - 9712596 was previously run on Pano V2 and was not salvageable
clopper_pearson(x=10, n=sensitivity_total_calls, conf.level=.9)
clopper_pearson(x=10, n=sensitivity_total_calls, conf.level=.95)
colnames(blinded_data_arm3)
table(blinded_data_arm3$deletion_source)
blinded_data_arm3 %>%
filter(report_CFE <= .065 & deletion_source %in% c("maternal", "mother_has_deletion") )
table(blinded_data_arm3$report_CFE)
